name: destination

on:
  workflow_run:
    workflows: [source]
    types:
      - completed

jobs:
  download:
    runs-on: ubuntu-latest
    outputs:
      customer: ${{ steps.set_outputs.outputs.customer }}
      environment: ${{ steps.set_outputs.outputs.environment }}
      region: ${{ steps.set_outputs.outputs.region }}
      chart_name: ${{ steps.set_outputs.outputs.chart_name }}
      image_tag: ${{ steps.set_outputs.outputs.image_tag }}
      slack_channel: ${{ steps.set_outputs.outputs.slack_channel }}
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr_number"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/pr_number.zip`, Buffer.from(download.data));

      - name: 'UnzipArtifact'
        run: unzip pr_number.zip

      - name: 'Set env vars'
        run: cat pr_number >> $GITHUB_ENV

      - name: 'Set outputs'
        id: set_outputs
        run: |
          echo "::set-output name=customer::${{ env.CUSTOMER }}"
          echo "::set-output name=environment::${{ env.ENVIRONMENT }}"
          echo "::set-output name=region::${{ env.REGION }}"
          echo "::set-output name=chart_name::${{ env.CHART_NAME }}"
          echo "::set-output name=image_tag::${{ env.IMAGE_TAG }}"
          echo "::set-output name=slack_channel::${{ env.SLACK_CHANNEL }}"

  DeployToSecurityDev:
    needs: download
    # not sure if this if is right, you will need to test
    uses: sflueras/playground/.github/workflows/source.yml@main
    with:
      customer: 'security'
      environment: 'dev'
      awsRegion: ${{ needs.download.outputs.region }}
      chartName: ${{ needs.download.outputs.chart_name }}
      imageTag: ${{ needs.download.outputs.image_tag }}
      slackChannel: ${{ needs.download.outputs.slack_channel }}